class ExpectedFiles
  def initialize(repository, datetime)
    @repository = repository
    @datetime = datetime
  end

  def builds_json
    [
      {
        "id": @repository.builds.first.id,
        "repository_id": @repository.id,
        "number": nil,
        "started_at": nil,
        "finished_at": nil,
        "created_at": @datetime,
        "updated_at": @datetime,
        "config": nil,
        "commit_id": nil,
        "request_id": nil,
        "state": nil,
        "duration": nil,
        "owner_id": nil,
        "owner_type": nil,
        "event_type": nil,
        "previous_state": nil,
        "pull_request_title": nil,
        "pull_request_number": nil,
        "branch": nil,
        "canceled_at": nil,
        "cached_matrix_ids": nil,
        "received_at": nil,
        "private": nil,
        "pull_request_id": nil,
        "branch_id": nil,
        "tag_id": nil,
        "sender_id": nil,
        "sender_type": nil
      },
      {
        "id": @repository.builds.second.id,
        "repository_id": @repository.id,
        "number": nil,
        "started_at": nil,
        "finished_at": nil,
        "created_at": @datetime,
        "updated_at": @datetime,
        "config": nil,
        "commit_id": nil,
        "request_id": nil,
        "state": nil,
        "duration": nil,
        "owner_id": nil,
        "owner_type": nil,
        "event_type": nil,
        "previous_state": nil,
        "pull_request_title": nil,
        "pull_request_number": nil,
        "branch": nil,
        "canceled_at": nil,
        "cached_matrix_ids": nil,
        "received_at": nil,
        "private": nil,
        "pull_request_id": nil,
        "branch_id": nil,
        "tag_id": nil,
        "sender_id": nil,
        "sender_type": nil,
      }
    ]
  end

  def jobs_json(build)
    [
      {
        "id": build.jobs.first.id,
        "repository_id": @repository.id,
        "commit_id": nil,
        "source_id": build.id,
        "source_type": "Build",
        "queue": nil,
        "type": nil,
        "state": nil,
        "number": nil,
        "config": nil,
        "worker": nil,
        "started_at": nil,
        "finished_at": nil,
        "created_at": @datetime,
        "updated_at": @datetime,
        "tags": nil,
        "allow_failure": false,
        "owner_id": nil,
        "owner_type": nil,
        "result": nil,
        "queued_at": nil,
        "canceled_at": nil,
        "received_at": nil,
        "debug_options": nil,
        "private": nil,
        "stage_number": nil,
        "stage_id": nil,
      },
      {
        "id": build.jobs.second.id,
        "repository_id": @repository.id,
        "commit_id": nil,
        "source_id": build.id,
        "source_type": "Build",
        "queue": nil,
        "type": nil,
        "state": nil,
        "number": nil,
        "config": nil,
        "worker": nil,
        "started_at": nil,
        "finished_at": nil,
        "created_at": @datetime,
        "updated_at": @datetime,
        "tags": nil,
        "allow_failure": false,
        "owner_id": nil,
        "owner_type": nil,
        "result": nil,
        "queued_at": nil,
        "canceled_at": nil,
        "received_at": nil,
        "debug_options": nil,
        "private": nil,
        "stage_number": nil,
        "stage_id": nil,
      }
    ]
  end

  def logs_json(job)
    [
      {
        "id": job.logs.first.id,
        "job_id": job.id,
        "content": "some log content",
        "removed_by": nil,
        "created_at": @datetime,
        "updated_at": @datetime,
        "aggregated_at": nil,
        "archived_at": nil,
        "purged_at": nil,
        "removed_at": nil,
        "archiving": false,
        "archive_verified": true
      },
      {
        "id": job.logs.second.id,
        "job_id": job.id,
        "content": "some log content",
        "removed_by": nil,
        "created_at": @datetime,
        "updated_at": @datetime,
        "aggregated_at": nil,
        "archived_at": nil,
        "purged_at": nil,
        "removed_at": nil,
        "archiving": false,
        "archive_verified": true
      }
    ]
  end

  def requests_json
    [
      {
        "id": @repository.requests.first.id,
        "repository_id": @repository.id,
        "commit_id": nil,
        "state": nil,
        "source": nil,
        "payload": nil,
        "token": nil,
        "config": nil,
        "started_at": nil,
        "finished_at": nil,
        "created_at": @datetime,
        "updated_at": @datetime,
        "event_type": nil,
        "comments_url": nil,
        "base_commit": nil,
        "head_commit": nil,
        "owner_id": nil,
        "owner_type": nil,
        "result": nil,
        "message": nil,
        "private": nil,
        "pull_request_id": nil,
        "branch_id": nil,
        "tag_id": nil,
        "sender_id": nil,
        "sender_type": nil
      },
      {
        "id": @repository.requests.second.id,
        "repository_id": @repository.id,
        "commit_id": nil,
        "state": nil,
        "source": nil,
        "payload": nil,
        "token": nil,
        "config": nil,
        "started_at": nil,
        "finished_at": nil,
        "created_at": @datetime,
        "updated_at": @datetime,
        "event_type": nil,
        "comments_url": nil,
        "base_commit": nil,
        "head_commit": nil,
        "owner_id": nil,
        "owner_type": nil,
        "result": nil,
        "message": nil,
        "private": nil,
        "pull_request_id": nil,
        "branch_id": nil,
        "tag_id": nil,
        "sender_id": nil,
        "sender_type": nil
      }
    ]
  end
end
